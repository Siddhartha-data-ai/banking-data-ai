# Secrets Management Configuration Template
# 
# DO NOT commit actual secrets to git!
# Use Azure Key Vault, AWS Secrets Manager, or Databricks Secrets

# Databricks Configuration
databricks:
  host: ${DATABRICKS_HOST}  # From environment or secrets manager
  token: ${DATABRICKS_TOKEN}  # From environment or secrets manager
  workspace_id: ${DATABRICKS_WORKSPACE_ID}

# Database Credentials
database:
  username: ${DB_USERNAME}
  password: ${DB_PASSWORD}
  host: ${DB_HOST}
  port: ${DB_PORT}
  database: ${DB_NAME}

# API Keys
api_keys:
  openai_key: ${OPENAI_API_KEY}
  stripe_key: ${STRIPE_API_KEY}
  sendgrid_key: ${SENDGRID_API_KEY}

# External Services
external_services:
  plaid_client_id: ${PLAID_CLIENT_ID}
  plaid_secret: ${PLAID_SECRET}
  twilio_account_sid: ${TWILIO_ACCOUNT_SID}
  twilio_auth_token: ${TWILIO_AUTH_TOKEN}

# Encryption Keys
encryption:
  master_key: ${ENCRYPTION_MASTER_KEY}
  data_key: ${ENCRYPTION_DATA_KEY}

# OAuth Credentials
oauth:
  client_id: ${OAUTH_CLIENT_ID}
  client_secret: ${OAUTH_CLIENT_SECRET}

# Azure Key Vault (if using Azure)
azure_key_vault:
  vault_url: ${AZURE_KEY_VAULT_URL}
  tenant_id: ${AZURE_TENANT_ID}
  client_id: ${AZURE_CLIENT_ID}
  client_secret: ${AZURE_CLIENT_SECRET}

# AWS Secrets Manager (if using AWS)
aws_secrets:
  region: ${AWS_REGION}
  access_key: ${AWS_ACCESS_KEY_ID}
  secret_key: ${AWS_SECRET_ACCESS_KEY}

# Databricks Secrets Scope
# Use: dbutils.secrets.get(scope="banking-secrets", key="databricks-token")
databricks_secrets_scope: "banking-secrets"

